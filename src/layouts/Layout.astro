---
import "../styles/globals.css";
import Footer from "../components/Footer.astro";

interface Props {
  title: string;
  t: any;
}

const { title, t } = Astro.props;

const lang = Astro.url.pathname.startsWith("/en") ? "en" : "es";
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    {/* Google Fonts */}
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="bg-white dark:bg-gray-900 text-gray-800 dark:text-gray-200 font-sans"
  >
    <slot />
    <Footer t={t} />
    <style is:global>
      :root {
        --accent-green: #4ade80; /* green-400 */
      }
      html {
        font-family: "Inter", sans-serif;
        scroll-behavior: smooth;
      }

      .dark body {
        background-color: #111827; /* bg-gray-900 */
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='49' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%234ade80' fill-opacity='0.05' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        background-size: 56px 98px;
        position: relative;
        overflow-x: hidden;
      }

      .dark body::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
          135deg,
          rgba(74, 222, 128, 0.15),
          transparent 50%
        );
        z-index: -1;
      }

      .selection\:bg-green-400\/30 *::selection {
        background-color: rgba(74, 222, 128, 0.3);
      }
    </style>

    <script is:inline>
      // This script is executed as soon as possible to avoid FOUC (Flash of Unstyled Content)
      const theme = (() => {
        if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "dark") {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }

      // We expose the theme to the window object so we can use it in other scripts
      window.localStorage.setItem("theme", theme);
    </script>
  </body>
</html>
