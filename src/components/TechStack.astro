---
import JavascriptIcon from "../assets/icons/brand-javascript.svg?raw";
import TypescriptIcon from "../assets/icons/brand-typescript.svg?raw";
import ReactIcon from "../assets/icons/react-icon.svg?raw";
import AstroIcon from "../assets/icons/astro-icon.svg?raw";
import TailwindIcon from "../assets/icons/tailwind-icon.svg?raw";
import NodejsIcon from "../assets/icons/nodejs-icon.svg?raw";
import LinuxIcon from "../assets/icons/brand-ubuntu.svg?raw";
import NextjsIcon from "../assets/icons/brand-nextjs.svg?raw";
import SqlIcon from "../assets/icons/file-type-sql.svg?raw";
import DockerIcon from "../assets/icons/brand-docker.svg?raw";
import GitIcon from "../assets/icons/brand-git.svg?raw";
import AzureIcon from "../assets/icons/brand-azure.svg?raw";
import MysqlIcon from "../assets/icons/brand-mysql.svg?raw";

import { getTranslations, type Locale } from '../utils/i18n';

interface Props {
  locale?: Locale;
}

const { locale = 'es' } = Astro.props;
const currentLocale = (Astro.currentLocale || locale) as Locale;
const t = getTranslations(currentLocale);


const technologies = [
  { svg: JavascriptIcon, label: "JavaScript" },
  { svg: TypescriptIcon, label: "TypeScript" },
  { svg: ReactIcon, label: "React" },
  { svg: AstroIcon, label: "Astro" },
  { svg: TailwindIcon, label: "Tailwind CSS" },
  { svg: NodejsIcon, label: "Node.js" },
  { svg: LinuxIcon, label: "Linux" },
  { svg: NextjsIcon, label: "Next.js" },
  { svg: SqlIcon, label: "SQL" },
  { svg: MysqlIcon, label: "MySQL" },
  { svg: DockerIcon, label: "Docker" },
  { svg: GitIcon, label: "Git" },
  { svg: AzureIcon, label: "Azure" },
];

// Duplicamos para el efecto de carrusel infinito
const extendedTechnologies = [...technologies, ...technologies, ...technologies, ...technologies];
---

<section id="tech" class="py-20">
  <div class="container mx-auto px-4 text-center">
    <h2 class="text-3xl font-bold mb-12">{t.tech_stack.title}</h2>
    <div
      class="relative w-full overflow-hidden [mask-image:linear-gradient(to_right,transparent,white_10%,white_90%,transparent)]"
    >
      <div class="animate-scroll flex min-w-full shrink-0 items-center gap-16">
        {extendedTechnologies.map((tech) => (
          <div class="flex-shrink-0 w-24 text-center">
            <div class="h-12 w-12 mx-auto text-gray-500 dark:text-gray-400 hover:text-green-500 dark:hover:text-green-400 transition-colors duration-300" set:html={tech.svg} />
            <p class="mt-2 text-sm font-semibold">{tech.label}</p>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>
